Index: sdk/src/posix/net.cpp
--- sdk/src/posix/net.cpp.orig
+++ sdk/src/posix/net.cpp
@@ -2802,17 +2802,17 @@ CURLcode CurlHttpIO::ssl_ctx_function(CURL*, void* ssl
     return CURLE_OK;
 }
 
-#if (OPENSSL_VERSION_NUMBER < 0x10100000L) || defined (LIBRESSL_VERSION_NUMBER)
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
    #define X509_STORE_CTX_get0_cert(ctx) (ctx->cert)
    #define X509_STORE_CTX_get0_untrusted(ctx) (ctx->untrusted)
    #define EVP_PKEY_get0_DSA(_pkey_) ((_pkey_)->pkey.dsa)
    #define EVP_PKEY_get0_RSA(_pkey_) ((_pkey_)->pkey.rsa)
 #endif
 
-#if (OPENSSL_VERSION_NUMBER < 0x1010100fL) || defined (LIBRESSL_VERSION_NUMBER)
+#if (OPENSSL_VERSION_NUMBER < 0x1010100fL)
 const BIGNUM *RSA_get0_n(const RSA *rsa)
 {
-#if (OPENSSL_VERSION_NUMBER < 0x10100000L) || defined (LIBRESSL_VERSION_NUMBER)
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
     return rsa->n;
 #else
     const BIGNUM *result;
@@ -2823,7 +2823,7 @@ const BIGNUM *RSA_get0_n(const RSA *rsa)
 
 const BIGNUM *RSA_get0_e(const RSA *rsa)
 {
-#if (OPENSSL_VERSION_NUMBER < 0x10100000L) || defined (LIBRESSL_VERSION_NUMBER)
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
     return rsa->e;
 #else
     const BIGNUM *result;
@@ -2834,7 +2834,7 @@ const BIGNUM *RSA_get0_e(const RSA *rsa)
 
 const BIGNUM *RSA_get0_d(const RSA *rsa)
 {
-#if (OPENSSL_VERSION_NUMBER < 0x10100000L) || defined (LIBRESSL_VERSION_NUMBER)
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
     return rsa->d;
 #else
     const BIGNUM *result;
