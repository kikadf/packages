$NetBSD$

* Part of patchset to build on NetBSD

--- third_party/rust/chromium_crates_io/vendor/rand-0.8.5/Cargo.toml.orig	2024-03-06 00:15:17.301133600 +0000
+++ third_party/rust/chromium_crates_io/vendor/rand-0.8.5/Cargo.toml
@@ -1,85 +1,75 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2018"
 name = "rand"
 version = "0.8.5"
 authors = ["The Rand Project Developers", "The Rust Project Developers"]
-license = "MIT OR Apache-2.0"
-readme = "README.md"
-repository = "https://github.com/rust-random/rand"
-documentation = "https://docs.rs/rand"
+include = ["src/", "LICENSE-*", "README.md", "CHANGELOG.md", "COPYRIGHT"]
+autobenches = true
+description = "Random number generators and other randomness functionality.\n"
 homepage = "https://rust-random.github.io/book"
-description = """
-Random number generators and other randomness functionality.
-"""
+documentation = "https://docs.rs/rand"
+readme = "README.md"
 keywords = ["random", "rng"]
 categories = ["algorithms", "no-std"]
-autobenches = true
-edition = "2018"
-include = ["src/", "LICENSE-*", "README.md", "CHANGELOG.md", "COPYRIGHT"]
-
+license = "MIT OR Apache-2.0"
+repository = "https://github.com/rust-random/rand"
 [package.metadata.docs.rs]
-# To build locally:
-# RUSTDOCFLAGS="--cfg doc_cfg" cargo +nightly doc --all-features --no-deps --open
 all-features = true
 rustdoc-args = ["--cfg", "doc_cfg"]
 
 [package.metadata.playground]
 features = ["small_rng", "serde1"]
+[dependencies.log]
+version = "0.4.4"
+optional = true
 
-[features]
-# Meta-features:
-default = ["std", "std_rng"]
-nightly = [] # enables performance optimizations requiring nightly rust
-serde1 = ["serde", "rand_core/serde1"]
-
-# Option (enabled by default): without "std" rand uses libcore; this option
-# enables functionality expected to be available on a standard platform.
-std = ["rand_core/std", "rand_chacha/std", "alloc", "getrandom", "libc"]
-
-# Option: "alloc" enables support for Vec and Box when not using "std"
-alloc = ["rand_core/alloc"]
+[dependencies.packed_simd]
+version = "0.3.7"
+features = ["into_bits"]
+optional = true
+package = "packed_simd_2"
 
-# Option: use getrandom package for seeding
-getrandom = ["rand_core/getrandom"]
+[dependencies.rand_chacha]
+version = "0.3.0"
+optional = true
+default-features = false
 
-# Option (requires nightly): experimental SIMD support
-simd_support = ["packed_simd"]
+[dependencies.rand_core]
+version = "0.6.0"
 
-# Option (enabled by default): enable StdRng
-std_rng = ["rand_chacha"]
+[dependencies.serde]
+version = "1.0.103"
+features = ["derive"]
+optional = true
+[dev-dependencies.bincode]
+version = "1.2.1"
 
-# Option: enable SmallRng
-small_rng = []
+[dev-dependencies.rand_pcg]
+version = "0.3.0"
 
-# Option: for rustc â‰¥ 1.51, enable generating random arrays of any size
-# using min-const-generics
+[features]
+alloc = ["rand_core/alloc"]
+default = ["std", "std_rng"]
+getrandom = ["rand_core/getrandom"]
 min_const_gen = []
-
-[workspace]
-members = [
-    "rand_core",
-    "rand_distr",
-    "rand_chacha",
-    "rand_pcg",
-]
-
-[dependencies]
-rand_core = { path = "rand_core", version = "0.6.0" }
-log = { version = "0.4.4", optional = true }
-serde = { version = "1.0.103", features = ["derive"], optional = true }
-rand_chacha = { path = "rand_chacha", version = "0.3.0", default-features = false, optional = true }
-
-[dependencies.packed_simd]
-# NOTE: so far no version works reliably due to dependence on unstable features
-package = "packed_simd_2"
-version = "0.3.7"
+nightly = []
+serde1 = ["serde", "rand_core/serde1"]
+simd_support = ["packed_simd"]
+small_rng = []
+std = ["rand_core/std", "rand_chacha/std", "alloc", "getrandom", "libc"]
+std_rng = ["rand_chacha"]
+[target."cfg(unix)".dependencies.libc]
+version = "0.2.22"
 optional = true
-features = ["into_bits"]
-
-[target.'cfg(unix)'.dependencies]
-# Used for fork protection (reseeding.rs)
-libc = { version = "0.2.22", optional = true, default-features = false }
-
-[dev-dependencies]
-rand_pcg = { path = "rand_pcg", version = "0.3.0" }
-# Only to test serde1
-bincode = "1.2.1"
+default-features = false
