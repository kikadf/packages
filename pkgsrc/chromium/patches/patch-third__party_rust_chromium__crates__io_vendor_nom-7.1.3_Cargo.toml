$NetBSD$

--- third_party/rust/chromium_crates_io/vendor/nom-7.1.3/Cargo.toml.orig	2024-03-06 00:15:17.285132400 +0000
+++ third_party/rust/chromium_crates_io/vendor/nom-7.1.3/Cargo.toml
@@ -1,59 +1,87 @@
-[package]
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
 
+[package]
+edition = "2018"
+rust-version = "1.48"
 name = "nom"
 version = "7.1.3"
-authors = [ "contact@geoffroycouprie.com" ]
+authors = ["contact@geoffroycouprie.com"]
+include = [
+    "CHANGELOG.md",
+    "LICENSE",
+    "README.md",
+    ".gitignore",
+    "Cargo.toml",
+    "src/*.rs",
+    "src/*/*.rs",
+    "tests/*.rs",
+    "doc/nom_recipes.md",
+]
+autoexamples = false
 description = "A byte-oriented, zero-copy, parser combinators library"
-license = "MIT"
-repository = "https://github.com/Geal/nom"
-readme = "README.md"
 documentation = "https://docs.rs/nom"
-keywords = ["parser", "parser-combinators", "parsing", "streaming", "bit"]
+readme = "README.md"
+keywords = [
+    "parser",
+    "parser-combinators",
+    "parsing",
+    "streaming",
+    "bit",
+]
 categories = ["parsing"]
-edition = "2018"
-autoexamples = false
-
-# also update in README.md (badge and "Rust version requirements" section)
-rust-version = "1.48"
+license = "MIT"
+repository = "https://github.com/Geal/nom"
 
-include = [
-  "CHANGELOG.md",
-  "LICENSE",
-  "README.md",
-  ".gitignore",
-  "Cargo.toml",
-  "src/*.rs",
-  "src/*/*.rs",
-  "tests/*.rs",
-  "doc/nom_recipes.md",
+[package.metadata.docs.rs]
+features = [
+    "alloc",
+    "std",
+    "docsrs",
 ]
+all-features = true
 
-[features]
-alloc = []
-std = ["alloc", "memchr/std", "minimal-lexical/std"]
-default = ["std"]
-docsrs = []
+[profile.bench]
+lto = true
+codegen-units = 1
+debug = true
 
-[dependencies.minimal-lexical]
-version = "0.2.0"
-default-features = false
+[[example]]
+name = "custom_error"
+path = "examples/custom_error.rs"
+required-features = ["alloc"]
 
-[dependencies.memchr]
-version = "2.3"
-default-features = false
+[[example]]
+name = "json"
+path = "examples/json.rs"
+required-features = ["alloc"]
 
-[dev-dependencies]
-doc-comment = "0.3"
-proptest = "1.0.0"
+[[example]]
+name = "json_iterator"
+path = "examples/json_iterator.rs"
+required-features = ["alloc"]
 
-[package.metadata.docs.rs]
-features = ["alloc", "std", "docsrs"]
-all-features = true
+[[example]]
+name = "iterator"
+path = "examples/iterator.rs"
 
-[profile.bench]
-debug = true
-lto = true
-codegen-units = 1
+[[example]]
+name = "s_expression"
+path = "examples/s_expression.rs"
+required-features = ["alloc"]
+
+[[example]]
+name = "string"
+path = "examples/string.rs"
+required-features = ["alloc"]
 
 [[test]]
 name = "arithmetic"
@@ -104,39 +132,37 @@ name = "reborrow_fold"
 name = "fnmut"
 required-features = ["alloc"]
 
-[[example]]
-name = "custom_error"
-required-features = ["alloc"]
-path = "examples/custom_error.rs"
+[dependencies.memchr]
+version = "2.3"
+default-features = false
 
-[[example]]
-name = "json"
-required-features = ["alloc"]
-path = "examples/json.rs"
+[dependencies.minimal-lexical]
+version = "0.2.0"
+default-features = false
 
-[[example]]
-name = "json_iterator"
-required-features = ["alloc"]
-path = "examples/json_iterator.rs"
+[dev-dependencies.doc-comment]
+version = "0.3"
 
-[[example]]
-name = "iterator"
-path = "examples/iterator.rs"
+[dev-dependencies.proptest]
+version = "1.0.0"
 
-[[example]]
-name = "s_expression"
-path = "examples/s_expression.rs"
-required-features = ["alloc"]
+[features]
+alloc = []
+default = ["std"]
+docsrs = []
+std = [
+    "alloc",
+    "memchr/std",
+    "minimal-lexical/std",
+]
 
-[[example]]
-name = "string"
-required-features = ["alloc"]
-path = "examples/string.rs"
+[badges.coveralls]
+branch = "main"
+repository = "Geal/nom"
+service = "github"
 
-[badges]
-travis-ci = { repository = "Geal/nom" }
-coveralls = { repository = "Geal/nom", branch = "main", service = "github" }
-maintenance = { status = "actively-developed" }
+[badges.maintenance]
+status = "actively-developed"
 
-[workspace]
-members = [".", "benchmarks/"]
+[badges.travis-ci]
+repository = "Geal/nom"
