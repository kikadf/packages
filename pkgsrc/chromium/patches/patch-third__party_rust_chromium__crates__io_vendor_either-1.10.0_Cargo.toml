$NetBSD$

* Part of patchset to build on NetBSD

--- third_party/rust/chromium_crates_io/vendor/either-1.10.0/Cargo.toml.orig	2024-03-19 22:15:22.890505800 +0000
+++ third_party/rust/chromium_crates_io/vendor/either-1.10.0/Cargo.toml
@@ -1,35 +1,51 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2018"
+rust-version = "1.36"
 name = "either"
 version = "1.10.0"
 authors = ["bluss"]
-edition = "2018"
-rust-version = "1.36"
-
-license = "MIT OR Apache-2.0"
-repository = "https://github.com/rayon-rs/either"
-documentation = "https://docs.rs/either/1/"
-readme = "README-crates.io.md"
-
 description = """
 The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.
 """
+documentation = "https://docs.rs/either/1/"
+readme = "README-crates.io.md"
+keywords = [
+    "data-structure",
+    "no_std",
+]
+categories = [
+    "data-structures",
+    "no-std",
+]
+license = "MIT OR Apache-2.0"
+repository = "https://github.com/rayon-rs/either"
 
-keywords = ["data-structure", "no_std"]
-categories = ["data-structures", "no-std"]
-
-[dependencies]
-serde = { version = "1.0", optional = true, features = ["derive"] }
-
-[features]
-default = ["use_std"]
-use_std = []
-
-[dev-dependencies]
-serde_json = "1.0.0"
+[package.metadata.docs.rs]
+features = ["serde"]
 
 [package.metadata.release]
 no-dev-version = true
 tag-name = "{{version}}"
 
-[package.metadata.docs.rs]
-features = ["serde"]
+[dependencies.serde]
+version = "1.0"
+features = ["derive"]
+optional = true
+
+[dev-dependencies.serde_json]
+version = "1.0.0"
+
+[features]
+default = ["use_std"]
+use_std = []
