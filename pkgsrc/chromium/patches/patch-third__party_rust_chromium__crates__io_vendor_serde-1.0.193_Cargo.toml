$NetBSD$

--- third_party/rust/chromium_crates_io/vendor/serde-1.0.193/Cargo.toml.orig	2024-03-06 00:15:17.385141000 +0000
+++ third_party/rust/chromium_crates_io/vendor/serde-1.0.193/Cargo.toml
@@ -1,69 +1,77 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2018"
+rust-version = "1.31"
 name = "serde"
 version = "1.0.193"
-authors = ["Erick Tryzelaar <erick.tryzelaar@gmail.com>", "David Tolnay <dtolnay@gmail.com>"]
+authors = [
+    "Erick Tryzelaar <erick.tryzelaar@gmail.com>",
+    "David Tolnay <dtolnay@gmail.com>",
+]
 build = "build.rs"
-categories = ["encoding", "no-std", "no-std::no-alloc"]
 description = "A generic serialization/deserialization framework"
-documentation = "https://docs.rs/serde"
-edition = "2018"
 homepage = "https://serde.rs"
-keywords = ["serde", "serialization", "no_std"]
-license = "MIT OR Apache-2.0"
+documentation = "https://docs.rs/serde"
 readme = "crates-io.md"
+keywords = [
+    "serde",
+    "serialization",
+    "no_std",
+]
+categories = [
+    "encoding",
+    "no-std",
+    "no-std::no-alloc",
+]
+license = "MIT OR Apache-2.0"
 repository = "https://github.com/serde-rs/serde"
-rust-version = "1.31"
 
-[dependencies]
-serde_derive = { version = "1", optional = true, path = "../serde_derive" }
+[package.metadata.docs.rs]
+features = [
+    "derive",
+    "rc",
+    "unstable",
+]
+rustdoc-args = [
+    "--cfg",
+    "doc_cfg",
+    "--generate-link-to-definition",
+]
+targets = ["x86_64-unknown-linux-gnu"]
 
-[dev-dependencies]
-serde_derive = { version = "1", path = "../serde_derive" }
+[package.metadata.playground]
+features = [
+    "derive",
+    "rc",
+]
 
 [lib]
 doc-scrape-examples = false
 
-[package.metadata.playground]
-features = ["derive", "rc"]
-
-[package.metadata.docs.rs]
-features = ["derive", "rc", "unstable"]
-targets = ["x86_64-unknown-linux-gnu"]
-rustdoc-args = ["--cfg", "doc_cfg", "--generate-link-to-definition"]
-
-# This cfg cannot be enabled, but it still forces Cargo to keep serde_derive's
-# version in lockstep with serde's, even if someone depends on the two crates
-# separately with serde's "derive" feature disabled. Every serde_derive release
-# is compatible with exactly one serde release because the generated code
-# involves nonpublic APIs which are not bound by semver.
-[target.'cfg(any())'.dependencies]
-serde_derive = { version = "=1.0.193", path = "../serde_derive" }
+[dependencies.serde_derive]
+version = "1"
+optional = true
 
-
-### FEATURES #################################################################
+[dev-dependencies.serde_derive]
+version = "1"
 
 [features]
+alloc = []
 default = ["std"]
-
-# Provide derive(Serialize, Deserialize) macros.
 derive = ["serde_derive"]
-
-# Provide impls for common standard library types like Vec<T> and HashMap<K, V>.
-# Requires a dependency on the Rust standard library.
+rc = []
 std = []
-
-# Provide impls for types that require unstable functionality. For tracking and
-# discussion of unstable functionality please refer to this issue:
-#
-#    https://github.com/serde-rs/serde/issues/812
 unstable = []
 
-# Provide impls for types in the Rust core allocation and collections library
-# including String, Box<T>, Vec<T>, and Cow<T>. This is a subset of std but may
-# be enabled without depending on all of std.
-alloc = []
-
-# Opt into impls for Rc<T> and Arc<T>. Serializing and deserializing these types
-# does not preserve identity and may result in multiple copies of the same data.
-# Be sure that this is what you want before enabling this feature.
-rc = []
+[target."cfg(any())".dependencies.serde_derive]
+version = "=1.0.193"
