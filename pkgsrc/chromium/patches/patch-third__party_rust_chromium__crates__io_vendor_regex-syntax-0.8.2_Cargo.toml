$NetBSD$

* Part of patchset to build on NetBSD

--- third_party/rust/chromium_crates_io/vendor/regex-syntax-0.8.2/Cargo.toml.orig	2024-03-19 22:15:23.026517900 +0000
+++ third_party/rust/chromium_crates_io/vendor/regex-syntax-0.8.2/Cargo.toml
@@ -1,30 +1,56 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2021"
+rust-version = "1.65"
 name = "regex-syntax"
-version = "0.8.2"  #:version
-authors = ["The Rust Project Developers", "Andrew Gallant <jamslam@gmail.com>"]
+version = "0.8.2"
+authors = [
+    "The Rust Project Developers",
+    "Andrew Gallant <jamslam@gmail.com>",
+]
+description = "A regular expression parser."
+documentation = "https://docs.rs/regex-syntax"
+readme = "README.md"
 license = "MIT OR Apache-2.0"
 repository = "https://github.com/rust-lang/regex/tree/master/regex-syntax"
-documentation = "https://docs.rs/regex-syntax"
-description = "A regular expression parser."
-workspace = ".."
-edition = "2021"
-rust-version = "1.65"
 
-# Features are documented in the "Crate features" section of the crate docs:
-# https://docs.rs/regex-syntax/*/#crate-features
+[package.metadata.docs.rs]
+all-features = true
+rustdoc-args = [
+    "--cfg",
+    "docsrs",
+]
+
+[dependencies.arbitrary]
+version = "1.3.0"
+features = ["derive"]
+optional = true
+
 [features]
-default = ["std", "unicode"]
-std = []
 arbitrary = ["dep:arbitrary"]
-
+default = [
+    "std",
+    "unicode",
+]
+std = []
 unicode = [
-  "unicode-age",
-  "unicode-bool",
-  "unicode-case",
-  "unicode-gencat",
-  "unicode-perl",
-  "unicode-script",
-  "unicode-segment",
+    "unicode-age",
+    "unicode-bool",
+    "unicode-case",
+    "unicode-gencat",
+    "unicode-perl",
+    "unicode-script",
+    "unicode-segment",
 ]
 unicode-age = []
 unicode-bool = []
@@ -33,19 +59,3 @@ unicode-gencat = []
 unicode-perl = []
 unicode-script = []
 unicode-segment = []
-
-[dependencies]
-arbitrary = { version = "1.3.0", features = ["derive"], optional = true }
-
-[package.metadata.docs.rs]
-# We want to document all features.
-all-features = true
-# Since this crate's feature setup is pretty complicated, it is worth opting
-# into a nightly unstable option to show the features that need to be enabled
-# for public API items. To do that, we set 'docsrs', and when that's enabled,
-# we enable the 'doc_auto_cfg' feature.
-#
-# To test this locally, run:
-#
-#     RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features
-rustdoc-args = ["--cfg", "docsrs"]
