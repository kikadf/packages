$NetBSD$

* Part of patchset to build on NetBSD

--- third_party/rust/chromium_crates_io/vendor/cxx-1.0.116/Cargo.toml.orig	2024-03-19 22:15:22.866503700 +0000
+++ third_party/rust/chromium_crates_io/vendor/cxx-1.0.116/Cargo.toml
@@ -1,69 +1,110 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2021"
+rust-version = "1.60"
 name = "cxx"
 version = "1.0.116"
 authors = ["David Tolnay <dtolnay@gmail.com>"]
-categories = ["development-tools::ffi", "api-bindings", "no-std"]
+links = "cxxbridge1"
+exclude = [
+    "/demo",
+    "/gen",
+    "/syntax",
+    "/third-party",
+    "/tools/buck/prelude",
+]
 description = "Safe interop between Rust and C++"
-documentation = "https://docs.rs/cxx"
-edition = "2021"
-exclude = ["/demo", "/gen", "/syntax", "/third-party", "/tools/buck/prelude"]
 homepage = "https://cxx.rs"
-keywords = ["ffi", "c++"]
+documentation = "https://docs.rs/cxx"
+readme = "README.md"
+keywords = [
+    "ffi",
+    "c++",
+]
+categories = [
+    "development-tools::ffi",
+    "api-bindings",
+    "no-std",
+]
 license = "MIT OR Apache-2.0"
-links = "cxxbridge1"
 repository = "https://github.com/dtolnay/cxx"
-rust-version = "1.60"
-
-[features]
-default = ["std", "cxxbridge-flags/default"] # c++11
-"c++14" = ["cxxbridge-flags/c++14"]
-"c++17" = ["cxxbridge-flags/c++17"]
-"c++20" = ["cxxbridge-flags/c++20"]
-alloc = []
-std = ["alloc"]
-
-[dependencies]
-cxxbridge-macro = { version = "=1.0.116", path = "macro" }
-link-cplusplus = "1.0.9"
-
-[build-dependencies]
-cc = "1.0.79"
-cxxbridge-flags = { version = "=1.0.116", path = "flags", default-features = false }
-
-[dev-dependencies]
-cxx-build = { version = "=1.0.116", path = "gen/build" }
-cxx-gen = { version = "0.7", path = "gen/lib" }
-cxx-test-suite = { version = "0", path = "tests/ffi" }
-rustversion = "1.0.13"
-trybuild = { version = "1.0.81", features = ["diff"] }
-
-[lib]
-doc-scrape-examples = false
-
-[workspace]
-members = ["demo", "flags", "gen/build", "gen/cmd", "gen/lib", "macro", "tests/ffi"]
-
-[package.metadata.docs.rs]
-targets = ["x86_64-unknown-linux-gnu"]
-rustdoc-args = ["--cfg", "doc_cfg", "--generate-link-to-definition"]
 
 [package.metadata.bazel]
 additive_build_file_content = """
 cc_library(
-    name = "cxx_cc",
-    srcs = ["src/cxx.cc"],
-    hdrs = ["include/cxx.h"],
-    include_prefix = "rust",
-    includes = ["include"],
+    name = \"cxx_cc\",
+    srcs = [\"src/cxx.cc\"],
+    hdrs = [\"include/cxx.h\"],
+    include_prefix = \"rust\",
+    includes = [\"include\"],
     linkstatic = True,
-    strip_include_prefix = "include",
-    visibility = ["//visibility:public"],
+    strip_include_prefix = \"include\",
+    visibility = [\"//visibility:public\"],
 )
 """
 deps = [":cxx_cc"]
-extra_aliased_targets = { cxx_cc = "cxx_cc" }
 gen_build_script = false
 
-[patch.crates-io]
-cxx = { path = "." }
-cxx-build = { path = "gen/build" }
+[package.metadata.bazel.extra_aliased_targets]
+cxx_cc = "cxx_cc"
+
+[package.metadata.docs.rs]
+rustdoc-args = [
+    "--cfg",
+    "doc_cfg",
+    "--generate-link-to-definition",
+]
+targets = ["x86_64-unknown-linux-gnu"]
+
+[lib]
+doc-scrape-examples = false
+
+[dependencies.cxxbridge-macro]
+version = "=1.0.116"
+
+[dependencies.link-cplusplus]
+version = "1.0.9"
+
+[dev-dependencies.cxx-build]
+version = "=1.0.116"
+
+[dev-dependencies.cxx-gen]
+version = "0.7"
+
+[dev-dependencies.cxx-test-suite]
+version = "0"
+
+[dev-dependencies.rustversion]
+version = "1.0.13"
+
+[dev-dependencies.trybuild]
+version = "1.0.81"
+features = ["diff"]
+
+[build-dependencies.cc]
+version = "1.0.79"
+
+[build-dependencies.cxxbridge-flags]
+version = "=1.0.116"
+default-features = false
+
+[features]
+alloc = []
+"c++14" = ["cxxbridge-flags/c++14"]
+"c++17" = ["cxxbridge-flags/c++17"]
+"c++20" = ["cxxbridge-flags/c++20"]
+default = [
+    "std",
+    "cxxbridge-flags/default",
+]
+std = ["alloc"]
