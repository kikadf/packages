$NetBSD$

* Part of patchset to build on NetBSD

--- third_party/rust/chromium_crates_io/vendor/getrandom-0.2.12/Cargo.toml.orig	2024-03-19 22:15:22.894506200 +0000
+++ third_party/rust/chromium_crates_io/vendor/getrandom-0.2.12/Cargo.toml
@@ -1,58 +1,30 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
-name = "getrandom"
-version = "0.2.12" # Also update html_root_url in lib.rs when bumping this
 edition = "2018"
+name = "getrandom"
+version = "0.2.12"
 authors = ["The Rand Project Developers"]
-license = "MIT OR Apache-2.0"
+exclude = [".*"]
 description = "A small cross-platform library for retrieving random data from system source"
 documentation = "https://docs.rs/getrandom"
-repository = "https://github.com/rust-random/getrandom"
-categories = ["os", "no-std"]
-exclude = [".*"]
-
-[dependencies]
-cfg-if = "1"
-
-# When built as part of libstd
-compiler_builtins = { version = "0.1", optional = true }
-core = { version = "1.0", optional = true, package = "rustc-std-workspace-core" }
-
-[target.'cfg(unix)'.dependencies]
-libc = { version = "0.2.149", default-features = false }
-
-[target.'cfg(target_os = "wasi")'.dependencies]
-wasi = { version = "0.11", default-features = false }
-
-[target.'cfg(all(any(target_arch = "wasm32", target_arch = "wasm64"), target_os = "unknown"))'.dependencies]
-wasm-bindgen = { version = "0.2.62", default-features = false, optional = true }
-js-sys = { version = "0.3", optional = true }
-[target.'cfg(all(any(target_arch = "wasm32", target_arch = "wasm64"), target_os = "unknown"))'.dev-dependencies]
-wasm-bindgen-test = "0.3.18"
-
-[features]
-# Implement std-only traits for getrandom::Error
-std = []
-# Feature to enable fallback RDRAND-based implementation on x86/x86_64
-rdrand = []
-# Feature to enable JavaScript bindings on wasm*-unknown-unknown
-js = ["wasm-bindgen", "js-sys"]
-# Feature to enable custom RNG implementations
-custom = []
-# Unstable feature to support being a libstd dependency
-rustc-dep-of-std = [
-  "compiler_builtins",
-  "core",
-  "libc/rustc-dep-of-std",
-  "wasi/rustc-dep-of-std",
+readme = "README.md"
+categories = [
+    "os",
+    "no-std",
 ]
-# Unstable/test-only feature to run wasm-bindgen tests in a browser
-test-in-browser = []
-
-[package.metadata.docs.rs]
-features = ["std", "custom"]
-rustdoc-args = ["--cfg", "docsrs"]
+license = "MIT OR Apache-2.0"
+repository = "https://github.com/rust-random/getrandom"
 
-# workaround for https://github.com/cross-rs/cross/issues/1345
 [package.metadata.cross.target.x86_64-unknown-netbsd]
 pre-build = [
     "mkdir -p /tmp/netbsd",
@@ -62,3 +34,61 @@ pre-build = [
     "rm base.tar.xz",
     "rm -rf /tmp/netbsd",
 ]
+
+[package.metadata.docs.rs]
+features = [
+    "std",
+    "custom",
+]
+rustdoc-args = [
+    "--cfg",
+    "docsrs",
+]
+
+[dependencies.cfg-if]
+version = "1"
+
+[dependencies.compiler_builtins]
+version = "0.1"
+optional = true
+
+[dependencies.core]
+version = "1.0"
+optional = true
+package = "rustc-std-workspace-core"
+
+[features]
+custom = []
+js = [
+    "wasm-bindgen",
+    "js-sys",
+]
+rdrand = []
+rustc-dep-of-std = [
+    "compiler_builtins",
+    "core",
+    "libc/rustc-dep-of-std",
+    "wasi/rustc-dep-of-std",
+]
+std = []
+test-in-browser = []
+
+[target."cfg(all(any(target_arch = \"wasm32\", target_arch = \"wasm64\"), target_os = \"unknown\"))".dependencies.js-sys]
+version = "0.3"
+optional = true
+
+[target."cfg(all(any(target_arch = \"wasm32\", target_arch = \"wasm64\"), target_os = \"unknown\"))".dependencies.wasm-bindgen]
+version = "0.2.62"
+optional = true
+default-features = false
+
+[target."cfg(all(any(target_arch = \"wasm32\", target_arch = \"wasm64\"), target_os = \"unknown\"))".dev-dependencies.wasm-bindgen-test]
+version = "0.3.18"
+
+[target."cfg(target_os = \"wasi\")".dependencies.wasi]
+version = "0.11"
+default-features = false
+
+[target."cfg(unix)".dependencies.libc]
+version = "0.2.149"
+default-features = false
