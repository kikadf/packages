$NetBSD$

--- BUILD.gn.orig	2020-06-25 09:32:34.000000000 +0000
+++ BUILD.gn
@@ -203,7 +203,7 @@ group("gn_all") {
     ]
   }
 
-  if (is_win || (is_linux && !is_chromeos) || is_android) {
+  if (is_win || (is_linux && !is_chromeos) || is_android || is_bsd) {
     deps += [
       "//weblayer/shell:weblayer_shell",
       "//weblayer/test:weblayer_browsertests",
@@ -413,12 +413,12 @@ group("gn_all") {
   #       seems currently broken for this platform at the moment, and the
   #       corresponding code build and works on Linux unmodified.
   #       See instructions in the corresponding BUILD.gn.
-  if (is_linux) {
+  if (is_linux || is_bsd) {
     deps +=
         [ "//third_party/android_crazy_linker:android_crazy_linker_zip_fuzzer" ]
   }
 
-  if (is_linux || is_chromeos) {
+  if (is_linux || is_chromeos || is_bsd) {
     # This is only used by ChromeOS, but we want maximal fuzzer coverage, so
     # run it under linux too.
     deps += [
@@ -474,6 +474,15 @@ group("gn_all") {
       "//testing:empty_main",
     ]
 
+  if (is_bsd) {
+    deps += [
+      "//chrome:xdg_mime",
+      "//net:disk_cache_memory_test",
+      "//net:quic_client",
+      "//net:quic_server",
+      "//testing:empty_main",
+    ]
+
     if (use_dbus) {
       deps += [
         "//dbus:dbus_test_server",
@@ -487,14 +496,14 @@ group("gn_all") {
     }
   }
 
-  if (is_ios || is_win || (is_linux && !is_chromeos)) {
+  if (is_ios || is_win || (is_linux && !is_chromeos) || is_bsd) {
     deps += [
       "//base:base_i18n_perftests",
       "//google_apis:google_apis_unittests",
     ]
   }
 
-  if ((is_win || is_mac || is_linux || is_chromeos || is_fuchsia) &&
+  if ((is_win || is_mac || is_linux || is_chromeos || is_fuchsia || is_bsd) &&
       (target_cpu == "x86" || target_cpu == "x64")) {
     deps += [ "//third_party/swiftshader" ]
   }
@@ -520,7 +529,7 @@ group("gn_all") {
       "//ui/compositor:compositor_unittests",
     ]
 
-    if (!is_android) {
+    if (!is_android && is_linux) {
       deps += [
         "//chrome/test:load_library_perf_tests",
         "//chrome/test:sync_performance_tests",
@@ -545,6 +554,27 @@ group("gn_all") {
       ]
     }
 
+    if (is_bsd) {
+      deps += [
+        "//chrome/test:load_library_perf_tests",
+        "//chrome/test:sync_performance_tests",
+        "//chrome/test/chromedriver:chromedriver",
+        "//media/cast:generate_barcode_video",
+        "//media/cast:generate_timecode_audio",
+        "//net:crash_cache",
+        "//net:dns_fuzz_stub",
+        "//net:net_watcher",  # TODO(GYP): This should be conditional on
+                              # use_v8_in_net
+        "//net:run_testserver",
+        "//net:stress_cache",
+        "//net:tld_cleanup",
+        "//ppapi:pepper_hash_for_uma",
+        "//ppapi:ppapi_perftests",
+        "//third_party/leveldatabase:env_chromium_unittests",
+        "//third_party/libaddressinput:libaddressinput_unittests",
+      ]
+    }
+
     if (is_android) {
       deps += [ "//chrome/test/chromedriver:chromedriver($host_toolchain)" ]
     }
@@ -559,7 +589,7 @@ group("gn_all") {
     if (enable_nacl) {
       deps += [ "//components/nacl/loader:nacl_loader_unittests" ]
 
-      if (is_linux) {
+      if (is_linux || is_bsd) {
         # TODO(dpranke): Figure out what platforms should actually have this.
         deps += [ "//components/nacl/loader:nacl_helper" ]
 
@@ -593,6 +623,17 @@ group("gn_all") {
       "//third_party/breakpad:minidump_dump($host_toolchain)",
       "//third_party/breakpad:minidump_stackwalk($host_toolchain)",
     ]
+  }
+
+  if (is_bsd) {
+    deps += [
+      "//components/network_hints/browser",
+      "//content/public/app",
+      "//mojo:mojo_perftests",
+      "//services/service_manager/public/cpp",
+      "//testing/gmock:gmock_main",
+    ]
+  }
 
     if (!is_android) {
       deps += [
@@ -665,7 +706,7 @@ group("gn_all") {
         host_os == "win") {
       deps += [ "//chrome/test/mini_installer:mini_installer_tests" ]
     }
-  } else if (!is_android && !is_ios && !is_fuchsia) {
+  } else if (!is_android && !is_ios && !is_fuchsia && !is_bsd) {
     deps += [ "//third_party/breakpad:symupload($host_toolchain)" ]
   }
 
@@ -680,7 +721,7 @@ group("gn_all") {
     }
   }
 
-  if (is_mac || is_win || is_android || (is_linux && !is_chromeos)) {
+  if (is_mac || is_win || is_android || (is_linux && !is_chromeos) || is_bsd) {
     deps += [
       "//third_party/crashpad/crashpad:crashpad_tests",
       "//third_party/crashpad/crashpad/handler:crashpad_handler",
@@ -704,19 +745,19 @@ group("gn_all") {
     deps += [ "//content/browser/bluetooth/tools:bluetooth_metrics_hash" ]
   }
 
-  if (is_win || is_linux) {
+  if (is_win || is_linux || is_bsd) {
     deps += [ "//mojo" ]
   }
 
-  if (is_mac || is_linux || is_android || is_fuchsia) {
+  if (is_mac || is_linux || is_android || is_fuchsia || is_bsd) {
     deps += [ "//third_party/perfetto:all" ]
   }
 
-  if (is_win || is_mac || is_linux) {
+  if (is_win || is_mac || is_linux || is_bsd) {
     deps += [ "//third_party/sqlite:sqlite_shell" ]
   }
 
-  if (is_linux && !is_chromeos && !is_chromecast) {
+  if ((is_linux || is_bsd) && !is_chromeos && !is_chromecast) {
     # TODO(GYP): Figure out if any of these should be in gn_all
     # and figure out how cross-platform they are
     deps += [
@@ -758,13 +799,13 @@ group("gn_all") {
       }
       deps += [ "//third_party/libjpeg_turbo:simd_asm" ]
     }
-    if (is_linux && current_toolchain == host_toolchain) {
+    if ((is_linux || is_bsd) && current_toolchain == host_toolchain) {
       deps += [ "//v8:v8_shell" ]
     }
   }
 
   if ((is_linux && !is_chromecast) || (is_win && use_libfuzzer) ||
-      (use_libfuzzer && is_mac)) {
+      (use_libfuzzer && is_mac) || is_bsd) {
     deps += [
       "//chrome/services/ipp_parser/public/cpp:fuzzers",
       "//testing/libfuzzer/fuzzers",
@@ -786,7 +827,7 @@ group("gn_all") {
     deps += [ "//native_client_sdk/src:nacl_core_sdk" ]
   }
 
-  if (is_linux && use_ozone) {
+  if ((is_linux || is_bsd) && use_ozone) {
     deps += [
       "//headless:headless_non_renderer",
       "//headless:headless_tests",
@@ -798,8 +839,12 @@ group("gn_all") {
       "//chrome/browser/vr:vr_common_perftests",
       "//chrome/browser/vr:vr_common_unittests",
       "//chrome/browser/vr:vr_pixeltests",
+    ]
+    if (is_linux) {
+    deps += [
       "//tools/perf/contrib/vr_benchmarks:vr_perf_tests",
     ]
+    }
     if (is_desktop_linux && use_ozone) {
       deps += [ "//chrome/browser/vr/testapp:vr_testapp" ]
     }
@@ -838,7 +883,7 @@ group("gn_all") {
   deps += [ "//third_party/opencv:opencv_emd_fuzzer" ]
 }
 
-if ((is_linux || is_win) && enable_remoting && !use_ozone) {
+if ((is_linux || is_win || is_bsd) && enable_remoting && !use_ozone) {
   # This group is used for network annotation check test.
   group("shipped_binaries") {
     deps = [
@@ -1085,7 +1130,7 @@ if (!is_ios) {
       ]
     }
 
-    if (!is_win && !is_android) {
+    if (!is_win && !is_android && !is_bsd) {
       data_deps +=
           [ "//third_party/breakpad:minidump_stackwalk($host_toolchain)" ]
     }
@@ -1292,7 +1337,7 @@ group("chromium_builder_perf") {
 
     if (is_win) {
       data_deps += [ "//chrome/installer/mini_installer:mini_installer" ]
-    } else {
+    } else if (!is_bsd) {
       data_deps +=
           [ "//third_party/breakpad:minidump_stackwalk($host_toolchain)" ]
     }
